{"version":3,"sources":["App.js","index.js"],"names":["App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","q","setQ","searchParam","filterParam","setFilterParam","sortParam","setSortParam","copied","setCopied","stable","isStable","update","shouldUpdate","updateData","fetch","then","response","json","data","gameType","text","html","json_6","DOMParser","parseFromString","getElementsByTagName","item","textContent","replace","actual_json","JSON","parse","console","log","catch","err","clearCopyMessage","useEffect","message","className","type","name","id","placeholder","value","onChange","e","target","sort","a","b","namespace_id","toString","localeCompare","item_id","filter","some","newItem","toLowerCase","indexOf","search","map","onClick","navigator","clipboard","writeText","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b15a1ed3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [q, setQ] = useState(\"\");\r\n    const [searchParam] = useState([\"namespace_id\", \"item_id\", \"aux_id\"]);\r\n    const [filterParam, setFilterParam] = useState([\"All\"]);\r\n    const [sortParam, setSortParam] = useState([\"Alphabetical\"]);\r\n    const [copied, setCopied] = useState(null);\r\n    const [stable, isStable] = useState(true);\r\n    const [update, shouldUpdate] = useState(false);\r\n\r\n    function updateData() {\r\n        fetch(\"https://raw.githubusercontent.com/bedrock-dot-dev/docs/master/tags.json\")\r\n            .then((response) => response.json())\r\n            .then((data) =>\r\n                fetch(`https://raw.githubusercontent.com/bedrock-dot-dev/docs/master/${data[gameType][0]}/${data[gameType][1]}/Addons.html`)\r\n                    .then(function (response) {\r\n                        // When the page is loaded convert it to text\r\n                        return response.text();\r\n                    })\r\n                    .then(function (html) {\r\n                        // Initialize the DOM parser\r\n                        var parser = new DOMParser();\r\n\r\n                        // Parse the text\r\n                        var doc = parser.parseFromString(html, \"text/html\");\r\n\r\n                        // You can now even select part of that html as you would in the regular DOM\r\n                        // Example:\r\n                        var docArticle = doc.getElementsByTagName(\"table\").item(9).textContent;\r\n\r\n                        // Formatting of text into json, then convert to JSON.\r\n                        var json_1 = docArticle.replace(\"\\n Name ID Aux Values \\n\\n\", \"[ { 'namespace_id': '\");\r\n                        var json_2 = json_1.replace(/\\n\\n\\n\\n/g, \" }, { 'namespace_id': '\");\r\n                        var json_3 = json_2.replace(/\\n0 = Skeleton1 = Wither2 = Zombie3 = Steve4 = Creeper5 = Dragon\\n\\n\\n/g, \" }, { 'namespace_id': '\");\r\n                        var json_4 = json_3.replace(/\\n\\n\\n/g, \" } ]\");\r\n                        var json_5 = json_4.replace(/\\n/g, \"', 'item_id': \");\r\n                        var json_6 = json_5.replace(/'/g, `\"`);\r\n                        var actual_json = JSON.parse(json_6);\r\n\r\n                        console.log(actual_json);\r\n                        setItems(actual_json);\r\n                        setIsLoaded(true);\r\n                    })\r\n                    .catch(function (err) {\r\n                        console.log(\"Failed to fetch page: \", err);\r\n                        setIsLoaded(true);\r\n                        setError(error);\r\n                    })\r\n            );\r\n    }\r\n\r\n    if (stable) {\r\n        var gameType = \"stable\";\r\n        console.log(\"stable\");\r\n    }\r\n    if (!stable) {\r\n        var gameType = \"beta\";\r\n        console.log(\"beta\");\r\n    }\r\n\r\n    if (stable && update) {\r\n        updateData();\r\n        shouldUpdate(false);\r\n    }\r\n    if (!stable && update) {\r\n        updateData();\r\n        shouldUpdate(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, []);\r\n\r\n    function search(items) {\r\n        if (sortParam == \"Alphabetical\") {\r\n            items.sort((a, b) => a.namespace_id.toString().localeCompare(b.namespace_id));\r\n        } else if (sortParam == \"ID (Ascending)\") {\r\n            items.sort((a, b) => a.item_id - b.item_id);\r\n        } else if (sortParam == \"ID (Descending)\") {\r\n            items.sort((a, b) => b.item_id - a.item_id);\r\n        }\r\n        return items.filter((item) => {\r\n            if (item.item_id < 256 && filterParam == \"Block\") {\r\n                try {\r\n                    return searchParam.some((newItem) => {\r\n                        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\r\n                    });\r\n                } catch {\r\n                    return;\r\n                }\r\n            } else if (filterParam == \"All\") {\r\n                try {\r\n                    return searchParam.some((newItem) => {\r\n                        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\r\n                    });\r\n                } catch {\r\n                    return;\r\n                }\r\n            } else if (item.item_id >= 256 && filterParam == \"Item (New)\") {\r\n                try {\r\n                    return searchParam.some((newItem) => {\r\n                        return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\r\n                    });\r\n                } catch {\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function clearCopyMessage() {\r\n        setCopied(false);\r\n    }\r\n\r\n    if (error) {\r\n        return <>{error.message}</>;\r\n    } else if (!isLoaded) {\r\n        return <>loading...</>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1 className=\"fixedPosition\">{copied ? \"Copied\" : \"\"}</h1>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"search-wrapper\">\r\n                        <input type=\"search\" name=\"search-form\" id=\"search-form\" className=\"search-input\" placeholder=\"Search\" value={q} onChange={(e) => setQ(e.target.value)} />\r\n                        <div className=\"select\">\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    setSortParam(e.target.value);\r\n                                }}\r\n                                className=\"custom-select\"\r\n                            >\r\n                                <option className=\"dropdown-option\" value=\"Alphabetical\">\r\n                                    Alphabetical\r\n                                </option>\r\n                                <option className=\"dropdown-option\" value=\"ID (Ascending)\">\r\n                                    ID (Ascending)\r\n                                </option>\r\n                                <option className=\"dropdown-option\" value=\"ID (Descending)\">\r\n                                    ID (Descending)\r\n                                </option>\r\n                            </select>\r\n                            <span className=\"focus\"></span>\r\n                        </div>\r\n                        <div className=\"select\">\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    if (!stable) {\r\n                                        isStable(true);\r\n                                        shouldUpdate(true);\r\n                                    }\r\n                                    if (stable) {\r\n                                        isStable(false);\r\n                                        shouldUpdate(true);\r\n                                    }\r\n                                }}\r\n                                className=\"custom-select\"\r\n                            >\r\n                                <option value=\"Stable\">Stable</option>\r\n                                <option value=\"Beta\">Beta</option>\r\n                            </select>\r\n                            <span className=\"focus\"></span>\r\n                        </div>\r\n                        <div className=\"select\">\r\n                            <select\r\n                                onChange={(e) => {\r\n                                    setFilterParam(e.target.value);\r\n                                }}\r\n                                className=\"custom-select\"\r\n                            >\r\n                                <option className=\"dropdown-option\" value=\"All\">\r\n                                    All\r\n                                </option>\r\n                                <option className=\"dropdown-option\" value=\"Block\">\r\n                                    Blocks\r\n                                </option>\r\n                                <option className=\"dropdown-option\" value=\"Item (New)\">\r\n                                    Items (New)\r\n                                </option>\r\n                                <option className=\"dropdown-option\" value=\"Item (Old)\">\r\n                                    Items (Old)\r\n                                </option>\r\n                            </select>\r\n                            <span className=\"focus\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"card-grid\">\r\n                        {search(items).map((item) => (\r\n                            <li>\r\n                                <article className=\"card\" key={item.id}>\r\n                                    <div\r\n                                        onClick={function name() {\r\n                                            console.log(item.item_id * 65536 + 0); /*add item.item_data when it works again in place of 0*/\r\n                                            navigator.clipboard.writeText(item.item_id * 65536 + 0);\r\n                                            if (!copied) {\r\n                                                setTimeout(clearCopyMessage, 4000);\r\n                                            } else {\r\n                                                return;\r\n                                            }\r\n                                            setCopied(true);\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"card-image\">\r\n                                            <div className=\"flex\">\r\n                                                <i className={`icon-minecraft icon-minecraft-${item.namespace_id.replace(\"_\", \"-\")} item_icon`}></i>\r\n                                                <div className=\"spacer\"></div>\r\n                                                <h4 className=\"card-header\">minecraft:{item.namespace_id}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-content\">\r\n                                            <ol className=\"card-list\" id=\"test\">\r\n                                                <li>\r\n                                                    AUX: <span>{item.item_id * 65536 + 0}</span> {/*add item.item_data when it works again in place of 0*/}\r\n                                                </li>\r\n                                                <li>\r\n                                                    Numerical ID: <span>{item.item_id}</span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    Data Value: <span>0</span> {/*this should be changed to item.item_data when it works again in place of 0*/}\r\n                                                </li>\r\n                                            </ol>\r\n                                        </div>\r\n                                    </div>\r\n                                </article>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}